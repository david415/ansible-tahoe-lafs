---

- name: ensure backports apt repo is setup
  apt_repository: >
    repo="deb {{ backports_url }} {{ backports_distribution_release }} main"
    state=present 
    update_cache=yes
  sudo: yes

- name: ensure twisted from backports is installed
  apt: >
    pkg=python-twisted
    default_release="{{ backports_distribution_release }}"
    state=present
  sudo: yes

- name: ensure tahoe dependencies are installed
  apt:
    pkg: "{{item}}"
    state: present
  with_items: ["build-essential", "python-dev", "libffi-dev", "git", "python-openssl"]
  sudo: yes

- name: check if tahoe-lafs is already installed
  stat: path={{ tahoe_source_dir }}
  register: tahoe_source_dir_st

# BUG: verify gpg signature in git release tag
# BUG: what happens if the git clone gets interrupted?
# Use a debian package instead! It's much better!
- name: "git clone Leif's tahoe-lafs truckee branch if directory is non-existent"
  git: repo=https://github.com/leif/tahoe-lafs
    dest={{ tahoe_source_dir }}
    version=truckee
  when: tahoe_source_dir_st.isdir is not defined

- name: get state of tahoe_dep_tarball
  stat: path={{ tahoe_source_dir }}/{{ tahoe_dep_tarball }}
  register: tahoe_source_tarball_st

- name: ensure tahoe-lafs dependency tarball is downloaded
  get_url: >
    url={{ tahoe_dep_tarball_url }}
    dest={{ tahoe_source_dir }}/{{ tahoe_dep_tarball }}
    mode=0440
    validate_certs=yes
    sha256sum={{ tahoe_dep_tarball_sha256sum }}
  when: not tahoe_source_tarball_st.stat.exists

- name: get state of tahoe-deps directory
  stat: path={{ tahoe_source_dir }}/tahoe-deps
  register: st

# BUG: what if the tar extraction gets interrupted?
# bad news bears; use Debian package instead!
- name: extract tahoe-deps tarball if directory does not exist
  command: tar xf {{ tahoe_source_dir }}/{{ tahoe_dep_tarball }} --directory {{ tahoe_source_dir }}
  when: st.stat.isdir is not defined

- name: build tahoe-lafs
  shell: chdir={{ tahoe_source_dir }} http_proxy=localhost:0 https_proxy=localhost:0 python setup.py build

