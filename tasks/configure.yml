---

- name: ensure client directory exists
  file: path={{ tahoe_run_dir }} state=directory

- name: tahoe client tac file
  copy: src=tahoe-client.tac dest={{ tahoe_run_dir }}/tahoe-client.tac
  when: not tahoe_introducer

- name: tahoe introducer tac file
  copy: src=tahoe-introducer.tac dest={{ tahoe_run_dir }}/tahoe-introducer.tac
  when: tahoe_introducer

- name: read in the .onion address of our tor hidden service
  shell: "cat '{{ tor_hidden_services_parent_dir }}/{{ tahoe_hidden_service_name }}/hostname'"
  register: onion
  sudo: yes
  when: tor_hidden_services_parent_dir is defined

- name: "here's our tahoe-storage onion address!"
  debug: msg="{{ onion.stdout }}"
  when: not tahoe_introducer and tor_hidden_services_parent_dir is defined

- name: assert defined tahoe_local_introducers_dir or tahoe_introducer_furl
  assert:
    that: "tahoe_local_introducers_dir is defined or tahoe_introducer_furl is defined"
  when: not tahoe_introducer

# TODO: support multiple introducers (e.g. truckee68 branch)
# instead of just using the first introducer furl
- name: "cat`ing local introducer furl files"
  shell: "cat {{ tahoe_local_introducers_dir }}/* | head -n 1"
  delegate_to: 127.0.0.1
  connection: local
  register: introducer_furl_files
  when: not tahoe_introducer and tahoe_local_introducers_dir is defined

- name: here is our introducer furl
  debug: msg="{{ introducer_furl_files.stdout }}"
  when: not tahoe_introducer and tahoe_local_introducers_dir is defined

- name: set introducer furl variable from local introducer inventory
  set_fact:
    tahoe_introducer_furl: "{{ introducer_furl_files.stdout }}"
  when: not tahoe_introducer and tahoe_local_introducers_dir is defined

- name: template tahoe.cfg
  template: src=tahoe.cfg dest="{{ tahoe_run_dir }}/tahoe.cfg"
    mode=0600
  register: tahoe_template_status

- name: restart tahoe with torsocks if template changed
  command: "usewithtor {{ tahoe_source_dir }}/bin/tahoe restart {{ tahoe_run_dir }}"
  when: tahoe_template_status.changed == True and run_with_torsocks

- name: restart tahoe without torsocks if template changed
  command: "{{ tahoe_source_dir }}/bin/tahoe restart {{ tahoe_run_dir }}"
  when: tahoe_template_status.changed == True and not run_with_torsocks

- name: check state of tahoe process
  command: pgrep tahoe
  register: tahoe_is_running
  ignore_errors: True
  when: tahoe_template_status.changed != True

- name: ensure tahoe is running with torsocks
  command: "usewithtor {{ tahoe_source_dir }}/bin/tahoe start {{ tahoe_run_dir }}"
  when: tahoe_is_running|failed and run_with_torsocks

- name: ensure tahoe is running without torsocks
  command: "{{ tahoe_source_dir }}/bin/tahoe start {{ tahoe_run_dir }}"
  when: tahoe_is_running|failed and not run_with_torsocks

- name: wait for tahoe-lafs introducer furl file
  wait_for: state=present path="{{ tahoe_run_dir }}/private/introducer.furl" delay=5
  when: tahoe_introducer

- name: copy the private introducer furl file to local inventory
  fetch:
    flat: yes
    src: "{{ tahoe_run_dir }}/private/introducer.furl"
    dest: "{{ tahoe_local_introducers_dir }}/{{ inventory_hostname }}-introducer.furl"
  when: tahoe_introducer

- name: check for the existence of .tahoe in home directory
  stat: path=/home/amnesia/.tahoe
  register: tails_home_dotfile_st

- name: setup Tails user home .tahoe symlink
  file: src="{{ tahoe_run_dir }}" dest=/home/amnesia/.tahoe state=link
  when: setup_tails_dotfiles and not tails_home_dotfile_st.stat.exists

- name: create Tails dotfiles symlink for tahoe client directory
  file: src="{{ tahoe_run_dir }}" dest="{{ tails_dotfiles_dir }}/.tahoe" state=link
  when: setup_tails_dotfiles

